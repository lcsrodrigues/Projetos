#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiListaTarefas.Connection
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Laboratorio")]
	public partial class ConnectionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPESSOA(PESSOA instance);
    partial void UpdatePESSOA(PESSOA instance);
    partial void DeletePESSOA(PESSOA instance);
    #endregion
		
		public ConnectionDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LaboratorioConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PESSOA> PESSOA
		{
			get
			{
				return this.GetTable<PESSOA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PESSOA")]
	public partial class PESSOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CPF;
		
		private string _NOME;
		
		private string _EMAIL;
		
		private string _GENERO;
		
		private string _SENHA;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCPFChanging(long value);
    partial void OnCPFChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnGENEROChanging(string value);
    partial void OnGENEROChanged();
    partial void OnSENHAChanging(string value);
    partial void OnSENHAChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public PESSOA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPF", DbType="BigInt NOT NULL")]
		public long CPF
		{
			get
			{
				return this._CPF;
			}
			set
			{
				if ((this._CPF != value))
				{
					this.OnCPFChanging(value);
					this.SendPropertyChanging();
					this._CPF = value;
					this.SendPropertyChanged("CPF");
					this.OnCPFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENERO", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string GENERO
		{
			get
			{
				return this._GENERO;
			}
			set
			{
				if ((this._GENERO != value))
				{
					this.OnGENEROChanging(value);
					this.SendPropertyChanging();
					this._GENERO = value;
					this.SendPropertyChanged("GENERO");
					this.OnGENEROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SENHA", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SENHA
		{
			get
			{
				return this._SENHA;
			}
			set
			{
				if ((this._SENHA != value))
				{
					this.OnSENHAChanging(value);
					this.SendPropertyChanging();
					this._SENHA = value;
					this.SendPropertyChanged("SENHA");
					this.OnSENHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
